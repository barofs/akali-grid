/* TODO:
     * General utilies
        left-floated, left-aligned
        reverse order on mobile...
*/

$min-tablet-width: 48em;
$min-computer-width: 75em;

$one-wide:    8.33%;
$two-wide:    (2*$one-wide);
$three-wide:  (3*$one-wide);
$four-wide:   (4*$one-wide);
$five-wide:   (5*$one-wide);
$six-wide:    (6*$one-wide);
$seven-wide:  (7*$one-wide);
$eight-wide:  (8*$one-wide);
$nine-wide:   (9*$one-wide);
$ten-wide:    (10*$one-wide);
$eleven-wide: (11*$one-wide);
$twelve-wide: (12*$one-wide);

$one-wide-settings:    0 $one-wide;
$two-wide-settings:    0 $two-wide;
$three-wide-settings:  0 $three-wide;
$four-wide-settings:   0 $four-wide;
$five-wide-settings:   0 $five-wide;
$six-wide-settings:    0 $six-wide;
$seven-wide-settings:  0 $seven-wide;
$eight-wide-settings:  0 $eight-wide;
$nine-wide-settings:   0 $nine-wide;
$ten-wide-settings:    0 $ten-wide;
$eleven-wide-settings: 0 $eleven-wide;
$twelve-wide-settings: 0 $twelve-wide;

$wides: twelve eleven ten nine eight seven six five four three two one;

@mixin get-wide-settings($wide) {
       @if $wide == twelve { flex: $twelve-wide-settings; }
  @else if $wide == eleven { flex: $eleven-wide-settings; }
  @else if $wide == ten    { flex: $ten-wide-settings;    }
  @else if $wide == nine   { flex: $nine-wide-settings;   }
  @else if $wide == eight  { flex: $eight-wide-settings;  }
  @else if $wide == seven  { flex: $seven-wide-settings;  }
  @else if $wide == six    { flex: $six-wide-settings;    }
  @else if $wide == five   { flex: $five-wide-settings;   }
  @else if $wide == four   { flex: $four-wide-settings;   }
  @else if $wide == three  { flex: $three-wide-settings;  }
  @else if $wide == two    { flex: $two-wide-settings;    }
  @else if $wide == one    { flex: $one-wide-settings;    }
}

@mixin get-offset-value($wide) {
       @if $wide == twelve { margin-left: $twelve-wide; }
  @else if $wide == eleven { margin-left: $eleven-wide; }
  @else if $wide == ten    { margin-left: $ten-wide;    }
  @else if $wide == nine   { margin-left: $nine-wide;   }
  @else if $wide == eight  { margin-left: $eight-wide;  }
  @else if $wide == seven  { margin-left: $seven-wide;  }
  @else if $wide == six    { margin-left: $six-wide;    }
  @else if $wide == five   { margin-left: $five-wide;   }
  @else if $wide == four   { margin-left: $four-wide;   }
  @else if $wide == three  { margin-left: $three-wide;  }
  @else if $wide == two    { margin-left: $two-wide;    }
  @else if $wide == one    { margin-left: $one-wide;    }
}

@mixin generate-grid {

  @each $wide in $wides {
    [class*="#{$wide} wide column"] {
      @include get-wide-settings($wide);
    }
    [class$="offset #{$wide} column"] {
      @include get-offset-value($wide);
    }
  }

  @media all and (max-width: $min-computer-width - .1em){
    @each $wide in $wides {
      [class*="#{$wide} wide on mobile"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on mobile"].column {
        @include get-offset-value($wide);
      }
    }
  }

  @media all and (min-width: $min-tablet-width) and (max-width: $min-computer-width - .1em) {
    @each $wide in $wides {
      [class*="#{$wide} wide on tablet"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on tablet"].column {
        @include get-offset-value($wide);
      }
    }
  }

  @media all and (min-width: $min-computer-width) {
    @each $wide in $wides {
      [class*="#{$wide} wide on computer"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on computer"].column {
        @include get-offset-value($wide);
      }
    }
  }
}

.grid {
  display: flex;
  flex-wrap: wrap;

  &.centered {
    text-align: center;
  }
  
  &.centered:not([class*="only text"]) {
    justify-content: center;
  }

  &.all.centered {
    align-items: center;
  }
  
  &.reversed {
    flex-direction: row-reverse;
  }
  
  .column {
    &:not(.wide) {
      flex: 1;
    }
  }
  
  .fill.column {
    flex: 1;
  }
  
  .container {
    max-width: 100%;
        width: 90%;
    margin: 0 auto;
  }
  
  .fluid.container {
    width: 100%;
  }

  @include generate-grid();

  &[class*="one column"] .column {
    flex: $twelve-wide-settings;
  }

  &[class*="two column"] .column {
    flex: $six-wide-settings;
  }

  &[class*="three column"] .column {
    flex: $four-wide-settings;
  }

  &[class*="four column"] .column {
    flex: $three-wide-settings;
  }

  &[class*="five column"] .column {
    flex: 0 19.99200%;
  }

  &[class*="six column"] .column {
    flex: 0 16.66%;
  }

  &[class*="seven column"] .column {
    flex: 0 14.28%;
  }

  &[class*="eight column"] .column {
    flex: 0 12.49500%;
  }

  &[class*="nine column"] .column {
    flex: 0 11.1066667%;
  }

  &[class*="ten column"] .column {
    flex: 0 9.99600%;
  }

  &[class*="eleven column"] .column {
    flex: 0 9.08727273%;
  }

  &[class*="twelve column"] .column {
    flex: 0 8.33%;
  }
  
  @media all and (max-width: $min-computer-width - .1em){
    &.stackable .column {
      flex: 0 100%;
    }
  
    &.reversed.stackable {
      flex-direction: column-reverse;
    }

    [class*="fill on mobile"].column {
      flex: 1 !important;
    }

    [class*="computer only"].column,
    [class*="tablet only"].column,
    [class*="tablet and computer only"].column,
    [class*="computer and tablet only"].column {
      display: none;
    }

    [class*="mobile and tablet only"].column,
    [class*="mobile and computer only"].column {
      display: block;
    }
  }

  @media all and (min-width: $min-tablet-width) and (max-width: $min-computer-width - .1em) {
    [class*="fill on tablet"].column {
      flex: 1 !important;
    }

    [class*="offset zero column"] {
      margin-left: 0;
    }

    [class*="mobile only"].column,
    [class*="computer only"].column,
    [class*="mobile and computer only"].column {
      display: none;
    }

    [class*="tablet only"].column {
      display: block;
    }

    [class*="mobile and tablet only"].column,
    [class*="tablet and computer only"].column,
    [class*="computer and tablet only"].column {
      display: block;
    }
  }
  
  @media all and (min-width: $min-computer-width) {
    [class*="fill on computer"].column {
      flex: 1 !important;
    }

    [class*="offset zero column"] {
      margin-left: 0;
    }

    [class*="mobile only"].column,
    [class*="tablet only"].column,
    [class*="mobile and tablet only"].column  {
      display: none;
    }

    [class*="computer only"].column {
      display: block;
    }

    [class*="mobile and computer only"].column,
    [class*="tablet and computer only"].column,
    [class*="computer and tablet only"].column {
      display: block;
    }
  }
  
}